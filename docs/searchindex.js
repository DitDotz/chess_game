Search.setIndex({"docnames": ["board", "index", "king_validation", "moves", "notation", "pieces", "utility"], "filenames": ["board.rst", "index.rst", "king_validation.rst", "moves.rst", "notation.rst", "pieces.rst", "utility.rst"], "titles": ["Board Module Documentation", "Welcome to chess_ZQ\u2019s documentation!", "KingValidation Module Documentation", "Moves Module Documentation", "Notation Module Documentation", "Pieces Module Documentation", "Utility Module Documentation"], "terms": {"chess": [1, 3, 4, 5], "python": 1, "base": [0, 1, 3, 4, 5, 6], "termin": 1, "program": 1, "arjancod": 1, "refactor": 1, "tutori": 1, "It": 1, "offer": 1, "simpl": 1, "interfac": 1, "plai": 1, "notat": [0, 1], "support": 1, "To": 1, "navig": 1, "section": 1, "below": 1, "us": 1, "explor": 1, "specif": 1, "configur": 1, "option": 1, "more": 1, "we": 1, "hope": 1, "you": 1, "enjoi": 1, "chess_program": 1, "your": 1, "adventur": 1, "modul": 1, "index": 1, "search": 1, "page": 1, "class": [0, 2, 3, 4, 5, 6], "A": [0, 3, 4, 5], "util": [1, 2, 3, 4], "handl": 4, "algebra": [0, 4], "thi": 4, "provid": 4, "method": 4, "valid": [0, 2, 3, 4], "interpret": 4, "ensur": 4, "input": 4, "adher": 4, "rule": [3, 4], "game": [0, 4], "static": [2, 3, 4, 5, 6], "convert_to_coordin": 4, "chess_not": 4, "str": [0, 4, 5], "tupl": [0, 2, 3, 4, 6], "int": [0, 2, 3, 4, 5, 6], "convert": 4, "grid": 4, "coordin": [2, 3, 4, 5, 6], "arg": [0, 2, 3, 4, 5, 6], "The": [0, 2, 3, 4, 5, 6], "return": [0, 2, 3, 4, 5, 6], "contain": 4, "row": 4, "column": 4, "rais": [2, 4], "valueerror": 4, "If": [2, 4], "i": [0, 2, 3, 4, 5, 6], "invalid": 4, "exampl": 4, "a1": 4, "7": 4, "0": 4, "e4": 4, "4": 4, "get_valid_not": 4, "board": [1, 2, 3, 4, 6], "dict": [0, 2, 3, 4, 6], "piec": [0, 1, 2, 3, 4, 6], "prompt": 4, "user": 4, "continu": 4, "enter": 4, "until": 4, "move": [0, 1, 4, 5, 6], "current": [0, 2, 3, 4, 6], "state": [0, 2, 3, 4, 6], "repres": [0, 4, 5], "legal": 4, "6": 4, "x": [2, 3, 4, 5, 6], "y": [2, 3, 4, 5, 6], "type": [0, 4, 5], "piecetyp": [1, 4, 5], "pawn": [3, 4, 5, 6], "color": [0, 1, 2, 3, 4, 5], "white": [4, 5], "e2e4": 4, "interpret_not": 4, "list": [0, 3, 4], "origin": 4, "posit": [0, 2, 3, 4, 6], "final": 4, "after": [4, 6], "pe2e4": 4, "is_correct_format": 4, "bool": [0, 3, 4, 5, 6], "check": [0, 3, 4, 6], "specifi": [0, 2, 4], "exist": 4, "true": [0, 3, 4, 6], "fals": [0, 3, 4, 5, 6], "otherwis": [0, 3, 4, 6], "piece_exists_in_original_posit": 4, "qe2e4": 4, "notation_is_valid": 4, "kingvalid": 1, "valu": 5, "name": 5, "none": [0, 5], "qualnam": 5, "start": 5, "1": 5, "boundari": [3, 5], "enumer": 5, "attribut": [0, 3, 5], "black": 5, "empti": [0, 5], "squar": 5, "chessboard": [0, 2, 3, 5, 6], "default": 5, "has_mov": 5, "indic": [0, 5], "whether": [0, 5], "ha": [0, 5], "en_passant": 5, "en": 5, "passant": 5, "initialize_from_fen_char": 5, "fen": [0, 5], "initi": [0, 5], "object": [0, 3, 5, 6], "from": [3, 5, 6], "charact": 5, "given": [0, 2, 3, 5], "properti": 5, "repr": 5, "get": [0, 3, 5, 6], "string": [0, 5], "represent": 5, "its": [0, 5], "an": [0, 3, 5, 6], "rook": [3, 5], "bishop": [3, 5], "queen": [3, 5, 6], "knight": [3, 5], "king": [2, 3, 5, 6], "dictionari": 0, "king_in_checkm": 0, "checkmat": 0, "moves_mad": 0, "number": 0, "made": 0, "expected_play": 0, "player": 0, "expect": 0, "make": 0, "next": 0, "check_correct_player_turn": 0, "correspond": 0, "": 0, "check_is_king_in_checkm": 0, "check_move_is_valid": 0, "empty_board": 0, "creat": 0, "get_all_valid_mov": 0, "all": 0, "which": [0, 3, 6], "find": [0, 2], "get_valid_mov": [0, 3], "determin": 0, "move_piec": 0, "updat": [0, 6], "process_fen": 0, "process": 0, "todo": 0, "doe": 0, "whose": 0, "turn": 0, "castl": 0, "still": 0, "avail": [0, 6], "been": 0, "captur": 0, "set_correct_player_turn": 0, "set": 0, "bishopmov": [1, 3], "kingmov": [1, 3], "knightmov": [1, 3], "pawnmov": [1, 3], "piecemov": [1, 3], "queenmov": [1, 3], "rookmov": [1, 3], "universalmovementvalid": [1, 3], "defin": 3, "movement": 3, "inherit": 3, "abc": 3, "abstract": 3, "ar": 3, "univers": 3, "applic": 3, "is_king_in_check": 3, "is_not_occupied_by_": 3, "new_x": [3, 6], "new_i": [3, 6], "target": 3, "occupi": 3, "same": 3, "attempt": 3, "alli": 3, "is_occupied_by_oppos": 3, "oppos": [3, 6], "is_within_board": 3, "within": 3, "kingnotfound": [1, 2], "except": 2, "king_valid": 2, "when": 2, "found": 2, "find_king_posit": 2, "boardutil": [1, 6], "variou": 6, "oper": 6, "relat": 6, "get_direction_vector_from_k": 6, "king_x": 6, "king_i": 6, "direct": 6, "vector": 6, "calcul": 6, "dx": 6, "dy": 6, "is_in_direct_contact_with_opposing_piec": 6, "piece_at_posit": 6, "contact": 6, "being": 6, "chang": 6, "promote_pawn_if_avail": 6, "piece_to_check": 6, "promot": 6, "simulate_piece_mov": 6, "simulated_board": 6, "simul": 6, "new": 6}, "objects": {"": [[0, 0, 0, "-", "board"], [2, 0, 0, "-", "king_validation"], [3, 0, 0, "-", "moves"], [4, 0, 0, "-", "notation"], [5, 0, 0, "-", "pieces"], [6, 0, 0, "-", "utility"]], "board": [[0, 1, 1, "", "Board"]], "board.Board": [[0, 2, 1, "", "check_correct_player_turn"], [0, 2, 1, "", "check_is_king_in_checkmate"], [0, 2, 1, "", "check_move_is_valid"], [0, 2, 1, "", "empty_board"], [0, 2, 1, "", "get_all_valid_moves"], [0, 2, 1, "", "get_valid_moves"], [0, 2, 1, "", "move_piece"], [0, 2, 1, "", "process_fen"], [0, 2, 1, "", "set_correct_player_turn"]], "king_validation": [[2, 3, 1, "", "KingNotFound"], [2, 1, 1, "", "KingValidation"]], "king_validation.KingValidation": [[2, 2, 1, "", "find_king_position"]], "moves": [[3, 1, 1, "", "BishopMovement"], [3, 1, 1, "", "KingMovement"], [3, 1, 1, "", "KnightMovement"], [3, 1, 1, "", "PawnMovement"], [3, 1, 1, "", "PieceMovement"], [3, 1, 1, "", "QueenMovement"], [3, 1, 1, "", "RookMovement"], [3, 1, 1, "", "UniversalMovementValidation"]], "moves.BishopMovement": [[3, 2, 1, "", "get_valid_moves"]], "moves.KingMovement": [[3, 2, 1, "", "get_valid_moves"]], "moves.KnightMovement": [[3, 2, 1, "", "get_valid_moves"]], "moves.PawnMovement": [[3, 2, 1, "", "get_valid_moves"]], "moves.PieceMovement": [[3, 2, 1, "", "get_valid_moves"]], "moves.QueenMovement": [[3, 2, 1, "", "get_valid_moves"]], "moves.RookMovement": [[3, 2, 1, "", "get_valid_moves"]], "moves.UniversalMovementValidation": [[3, 2, 1, "", "is_king_in_check"], [3, 2, 1, "", "is_not_occupied_by_allies"], [3, 2, 1, "", "is_occupied_by_opposing"], [3, 2, 1, "", "is_within_board"]], "notation": [[4, 1, 1, "", "Notation"]], "notation.Notation": [[4, 2, 1, "", "convert_to_coordinates"], [4, 2, 1, "", "get_valid_notation"], [4, 2, 1, "", "interpret_notation"], [4, 2, 1, "", "is_correct_format"], [4, 2, 1, "", "notation_is_valid"], [4, 2, 1, "", "piece_exists_in_original_position"]], "pieces": [[5, 1, 1, "", "Color"], [5, 1, 1, "", "Piece"], [5, 1, 1, "", "PieceType"]], "pieces.Piece": [[5, 2, 1, "", "initialize_from_fen_char"], [5, 4, 1, "", "repr"]], "utility": [[6, 1, 1, "", "BoardUtils"]], "utility.BoardUtils": [[6, 2, 1, "", "get_direction_vector_from_king"], [6, 2, 1, "", "is_in_direct_contact_with_opposing_piece"], [6, 2, 1, "", "promote_pawn_if_available"], [6, 2, 1, "", "simulate_piece_move"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:exception", "4": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "exception", "Python exception"], "4": ["py", "property", "Python property"]}, "titleterms": {"welcom": 1, "chess_zq": 1, "": 1, "document": [0, 1, 2, 3, 4, 5, 6], "introduct": 1, "about": 1, "kei": 1, "featur": 1, "get": 1, "start": 1, "content": 1, "indic": 1, "tabl": 1, "notat": 4, "modul": [0, 2, 3, 4, 5, 6], "kingvalid": 2, "piec": 5, "board": 0, "move": 3, "util": 6}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"Notation Module Documentation": [[4, "module-notation"]], "Board Module Documentation": [[0, "module-board"]], "Moves Module Documentation": [[3, "module-moves"]], "Welcome to chess_ZQ\u2019s documentation!": [[1, "welcome-to-chess-zq-s-documentation"]], "Introduction": [[1, "introduction"]], "About": [[1, "about"]], "Key Features": [[1, "key-features"]], "Getting Started": [[1, "getting-started"]], "Contents:": [[1, null]], "Indices and tables": [[1, "indices-and-tables"]], "Pieces Module Documentation": [[5, "module-pieces"]], "Utility Module Documentation": [[6, "module-utility"]], "KingValidation Module Documentation": [[2, "module-king_validation"]]}, "indexentries": {"board (class in board)": [[0, "board.Board"]], "board": [[0, "module-board"]], "check_correct_player_turn() (board.board method)": [[0, "board.Board.check_correct_player_turn"]], "check_is_king_in_checkmate() (board.board method)": [[0, "board.Board.check_is_king_in_checkmate"]], "check_move_is_valid() (board.board method)": [[0, "board.Board.check_move_is_valid"]], "empty_board() (board.board method)": [[0, "board.Board.empty_board"]], "get_all_valid_moves() (board.board method)": [[0, "board.Board.get_all_valid_moves"]], "get_valid_moves() (board.board method)": [[0, "board.Board.get_valid_moves"]], "module": [[0, "module-board"], [2, "module-king_validation"], [3, "module-moves"], [4, "module-notation"], [5, "module-pieces"], [6, "module-utility"]], "move_piece() (board.board method)": [[0, "board.Board.move_piece"]], "process_fen() (board.board method)": [[0, "board.Board.process_fen"]], "set_correct_player_turn() (board.board method)": [[0, "board.Board.set_correct_player_turn"]], "kingnotfound": [[2, "king_validation.KingNotFound"]], "kingvalidation (class in king_validation)": [[2, "king_validation.KingValidation"]], "find_king_position() (king_validation.kingvalidation static method)": [[2, "king_validation.KingValidation.find_king_position"]], "king_validation": [[2, "module-king_validation"]], "bishopmovement (class in moves)": [[3, "moves.BishopMovement"]], "kingmovement (class in moves)": [[3, "moves.KingMovement"]], "knightmovement (class in moves)": [[3, "moves.KnightMovement"]], "pawnmovement (class in moves)": [[3, "moves.PawnMovement"]], "piecemovement (class in moves)": [[3, "moves.PieceMovement"]], "queenmovement (class in moves)": [[3, "moves.QueenMovement"]], "rookmovement (class in moves)": [[3, "moves.RookMovement"]], "universalmovementvalidation (class in moves)": [[3, "moves.UniversalMovementValidation"]], "get_valid_moves() (moves.bishopmovement method)": [[3, "moves.BishopMovement.get_valid_moves"]], "get_valid_moves() (moves.kingmovement method)": [[3, "moves.KingMovement.get_valid_moves"]], "get_valid_moves() (moves.knightmovement method)": [[3, "moves.KnightMovement.get_valid_moves"]], "get_valid_moves() (moves.pawnmovement method)": [[3, "moves.PawnMovement.get_valid_moves"]], "get_valid_moves() (moves.piecemovement method)": [[3, "moves.PieceMovement.get_valid_moves"]], "get_valid_moves() (moves.queenmovement method)": [[3, "moves.QueenMovement.get_valid_moves"]], "get_valid_moves() (moves.rookmovement method)": [[3, "moves.RookMovement.get_valid_moves"]], "is_king_in_check() (moves.universalmovementvalidation static method)": [[3, "moves.UniversalMovementValidation.is_king_in_check"]], "is_not_occupied_by_allies() (moves.universalmovementvalidation static method)": [[3, "moves.UniversalMovementValidation.is_not_occupied_by_allies"]], "is_occupied_by_opposing() (moves.universalmovementvalidation static method)": [[3, "moves.UniversalMovementValidation.is_occupied_by_opposing"]], "is_within_board() (moves.universalmovementvalidation static method)": [[3, "moves.UniversalMovementValidation.is_within_board"]], "moves": [[3, "module-moves"]], "notation (class in notation)": [[4, "notation.Notation"]], "convert_to_coordinates() (notation.notation static method)": [[4, "notation.Notation.convert_to_coordinates"]], "get_valid_notation() (notation.notation static method)": [[4, "notation.Notation.get_valid_notation"]], "interpret_notation() (notation.notation static method)": [[4, "notation.Notation.interpret_notation"]], "is_correct_format() (notation.notation static method)": [[4, "notation.Notation.is_correct_format"]], "notation": [[4, "module-notation"]], "notation_is_valid() (notation.notation static method)": [[4, "notation.Notation.notation_is_valid"]], "piece_exists_in_original_position() (notation.notation static method)": [[4, "notation.Notation.piece_exists_in_original_position"]], "color (class in pieces)": [[5, "pieces.Color"]], "piece (class in pieces)": [[5, "pieces.Piece"]], "piecetype (class in pieces)": [[5, "pieces.PieceType"]], "initialize_from_fen_char() (pieces.piece static method)": [[5, "pieces.Piece.initialize_from_fen_char"]], "pieces": [[5, "module-pieces"]], "repr (pieces.piece property)": [[5, "pieces.Piece.repr"]], "boardutils (class in utility)": [[6, "utility.BoardUtils"]], "get_direction_vector_from_king() (utility.boardutils static method)": [[6, "utility.BoardUtils.get_direction_vector_from_king"]], "is_in_direct_contact_with_opposing_piece() (utility.boardutils static method)": [[6, "utility.BoardUtils.is_in_direct_contact_with_opposing_piece"]], "promote_pawn_if_available() (utility.boardutils static method)": [[6, "utility.BoardUtils.promote_pawn_if_available"]], "simulate_piece_move() (utility.boardutils static method)": [[6, "utility.BoardUtils.simulate_piece_move"]], "utility": [[6, "module-utility"]]}})